package com.jumper.hospital.draw;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Arrays;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang.StringUtils;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.VerticalPositionMark;
import com.jumper.hospital.enums.RemoteType;
import com.jumper.hospital.utils.Consts;
import com.jumper.hospital.utils.TimeUtils;
import com.jumper.hospital.vo.VoRemoteData;

public class GenerateSFYMonitorPDF {

	/** 测试用胎心数据 **/
	protected static int[] dataArray = {136,135,132,128,127,127,128,130,132,135,136,138,140,141,142,141,140,139,138,136,135,135,133,132,131,131,131,131,133,136,138,138,138,138,136,135,133,131,131,130,129,131,133,135,136,137,138,138,138,137,136,134,131,129,128,128,127,125,126,126,126,128,132,137,137,140,140,141,141,140,139,138,135,132,130,128,125,124,124,123,123,123,122,122,124,123,124,124,125,128,130,132,133,134,136,138,141,143,142,142,140,135,132,131,131,130,127,125,125,124,124,124,124,126,125,126,127,134,136,138,138,139,139,139,138,134,132,131,130,128,127,125,125,125,125,125,124,124,124,125,125,126,127,128,130,130,130,131,132,133,135,136,136,138,137,138,137,136,135,135,135,135,134,132,131,130,128,126,127,127,127,127,126,125,125,127,131,133,136,136,137,137,136,136,131,127,127,127,128,129,130,130,130,130,128,128,129,131,132,134,136,138,140,141,142,145,145,146,147,147,147,147,147,147,148,147,146,147,147,148,149,149,149,151,151,151,151,151,152,152,151,152,152,152,152,0,0,0,0,0,148,147,148,147,147,145,146,145,145,145,145,146,144,143,143,140,136,135,136,136,136,136,131,131,131,131,131,132,132,133,135,135,137,138,136,136,136,134,134,130,131,131,132,132,132,133,131,132,132,132,134,138,139,137,137,136,131,127,127,127,127,129,133,134,134,134,133,133,132,131,132,132,132,133,133,133,132,132,133,133,135,136,138,138,138,138,139,140,141,140,134,134,131,128,128,127,127,127,129,129,127,127,128,128,128,136,136,137,137,143,143,144,144,145,145,146,145,144,144,142,136,128,128,127,124,124,124,124,125,126,128,128,128,128,126,126,126,130,130,130,132,132,133,135,138,138,140,141,141,141,141,139,133,128,127,127,128,130,130,133,133,133,133,131,130,128,128,126,128,128,132,136,138,138,138,140,139,140,140,135,132,131,131,129,129,129,128,128,129,129,132,134,134,135,139,140,141,141,142,143,144,144,145,147,148,148,148,149,147,147,141,140,140,136,134,133,133,133,129,127,127,127,128,129,126,127,127,128,128,135,137,138,140,141,142,142,142,143,142,142,142,141,142,142,142,143,142,143,143,137,136,133,131,125,124,124,126,126,127,126,127,131,133,137,136,138,139,140,141,141,138,138,134,131,130,130,130,128,127,127,130,132,134,135,136,137,138,138,137,135,133,132,130,128,128,128,130,130,131,133,136,137,137,137,137,137,135,135,132,130,130,130,130,131,132,135,136,137,138,138,139,140,138,138,136,135,135,131,126,126,127,129,131,130,131,132,133,134,134,133,133,132,135,138,138,138,139,139,140,141,137,135,135,132,129,129,127,127,127,127,131,132,131,131,131,132,135,136,137,138,138,139,140,141,142,143,143,143,144,145,146,146,146,146,146,145,143,142,139,140,142,141,141,141,139,139,141,139,142,142,141,143,147,147,147,146,145,144,144,144,144,144,145,144,143,141,137,135,134,133,136,138,138,138,137,136,134,133,132,131,127,126,125,124,123,124,127,130,132,132,132,132,133,133,132,132,130,128,128,127,128,128,128,130,131,131,131,130,130,129,129,129,129,130,131,132,134,135,136,137,138,141,140,138,138,134,131,131,133,137,137,137,137,137,137,136,135,137,138,139,139,140,141,143,145,145,145,146,145,144,143,142,143,142,141,140,139,138,137,134,132,131,129,129,131,135,139,138,139,139,139,140,140,140,140,140,139,139,138,138,140,140,141,141,141,141,142,143,143,145,147,147,148,149,149,149,149,148,148,148,147,147,145,143,143,141,141,140,136,136,136,138,139,139,139,137,136,137,137,136,136,135,135,138,138,139,139,138,138,136,137,137,138,137,135,135,133,137,137,139,138,139,139,138,138,137,136,134,133,132,133,136,138,138,141,142,144,144,146,148,149,150,151,151,151,150,149,149,149,149,149,151,152,152,153,153,153,154,154,154,154,155,156,156,158,156,156,155,153,148,145,144,144,143,141,140,139,140,139,140,143,143,144,145,145,145,144,142,140,139,136,135,133,132,132,132,132,131,133,136,136,136,135,133,131,129,127,129,129,129,128,130,129,131,134,132,133,136,138,139,139,140,141,143,144,144,144,143,142,142,141,141,138,138,137,138,138,138,137,136,135,136,139,142,141,142,142,141,141,139,139,137,135,137,138,138,141,141,143,144,144,145,146,146,146,146,144,143,141,138,136,133,132,133,133,133,133,134,135,136,136,137,138,140,138,138,137,136,137,137,140,140,140,140,137,135,134,134,133,132,132,133,134,136,136,137,140,141,142,142,142,141,139,138,137,132,133,132,133,132,133,133,132,133,133,134,134,136,139,139,140,140,141,141,139,138,137,137,134,135,135,136,135,135,135,133,133,134,135,137,140,141,141,141,141,142,141,140,139,138,137,136,135,134,134,135,136,137,137,137,136,134,131,131,132,133,135,134,134,134,134,134,136,139,139,139,140,140,140,141,141,141,140,138,136,136,137,137,138,138,140,141,141,140,140,139,136,136,136,133,134,136,137,138,138,137,137,135,134,134,134,136,136,137,137,138,138,138,137,136,134,132,131,133,133,132,131,131,132,132,133,133,132,132,132,132,135,136,135,135,134,134,133,132,131,131,132,132,133,133,133,133,133,133,132,132,133,131,133,133,134,135,134,134,133,131,130,131,133,133,132,134,136,136,136,136,132,130,130,131,135,134,134,135,135,136,135,134,134,134,136,136,137,136,137,138,138,139,142,143,143,144,144,147,148,148,148,149,149,149,149,150,151,152,152,153,153,153,153,154,153,153,153,152,152,151,149,148,146,143,139,140,141,141,141,141,135,134,134,132,133,132,130,132,127,129,131,132,133,134,133,132,130,128,127,125,127,128,129,128,128,127,128,130,132,131,131,131,131,132,134,134,134,133,133,133,132,132,132,134,134,133,133,129,128,127,126,128,129,130,130,129,127,126,125,127,130,131,135,134,135,135,135,133,133,135,135,136,135,134,133,130,133,134,138,140,139,139,138,136,136,136,136,135,134,132,128,124,124,125,126,132,131,134,132,132,131,129,128,130,134,135,137,137,141,140,141,142,141,143,146,146,146,146,145,145,144,143,142,141,140,139,137,132,127,126,126,126,127,126,126,128,131,134,132,131,131,131,134,133,134,135,136,137,137,137,137,138,138,138,137,136,135,133,132,130,128,127,127,126,127,127,128,129,131,133,134,134,135,135,136,136,136,137,138,138,139,138,137,136,135,134,135,135,133,132,132,130,128,128,125,127,124,126,130,132,131,132,135,134,134,134,132,132,130,128,127,126,122,120,121,121,125,127,126,126,125,125,126,127,126,126,128,129,131,131,131,132,132,133,132,133,133,133,133,134,134,134,133,133,132,132,129,126,125,126,130,132,133,134,134,135,136,136,137,136,137,136,134,135,134,133,133,132,131,130,129,130,131,132,132,131,131,131,132,133,135,136,136,136,135,134,134,133,134,135,136,137,138,139,141,142,143,143,144,147,148,148,149,148,150,150,150,151,150,150,150,151,151,151,151,152,152,152,152,150,151,150,149,149,149,150,150,150,151,150,148,147,146,145,144,142,141,140,139,138,132,127,125,125,128,130,135,137,138,140,140,141,142,143,144,144,144,144,142,141,139,136,134,132,129,127,125,124,124,123,122,121,121,121,123,122,122,123,122,122,123,122,124,130,126,128,129,129,130,130,127,127,126,126,123,122,123,121,123,127,128,129,129,129,132,135,136,135,135,134,133,136,135,136,136,134,134,132,131,128,124,124,123,126,129,129,130,130,129,129,126,125,125,124,125,124,126,126,129,133,130,130,130,129,122,124,122,121,121,121,123,128,131,133,135,135,134,133,132,132,132,132,131,130,130,129,130,130,129,127,126,126,127,127,129,134,135,135,136,137,138,138,139,138,137,137,135,137,137,137,137,137,137,138,137,138,138,138,138,138,137,138,139,138,138,137,136,136,136,135,133,128,130,129,132,134,134,134,133,131,131,127,130,131,130,132,131,130,131,130,130,130,127,127,127,125,126,131,134,134,136,136,137,138,138,137,137,136,134,135,127,127,125,126,124,123,121,121,121,121,123,127,133,136,138,139,139,140,142,141,140,139,138,136,135,135,135,133,129,129,132,131,131,133,130,129,129,129,128,131,131,127,125,124,124,125,127,130,130,130,132,134,134,136,133,131,131,129,129,127,127,131,130,130,130,126,125,126,126,127,131,134,134,136,136,137,139,139,143,143,142,143,140,140,140,138,137,137,135,138,135,135,138,135,137,137,135,133,131,131,130,136,136,137,139,141,141,142,143,145,145,145,146,147,147,147,148,150,150,150,150,152,152,152,152,152,152,151,152,152,152,152,153,153,154,154,154,154,154,153,155,155,156,155,155,155,155,153,148,148,143,138,135,135,133,130,122,123,123,131,130,130,130,127,121,120,120,122,123,123,128,136,137,136,136,136,134,134,129,130,130,130,131,132,130,130,130,128,127,127,125,124,124,124,124,125,124,124,124,124,126,127,126,126,126,126,123,122,121,121,122,123,127,127,129,131,131,131,134,135,135,135,134,133,132,130,128,126,126,121,121,122,123,124,128,134,135,136,135,135,135,129,122,121,122,122,122,123,123,125,126,125,125,124,126,130,131,132,131,131,132,132,135,134,136,136,137,138,138,139,138,136,130,125,125,127,132,136,136,136,137,137,139,141,141,141,141,141,141,140,140,138,138,137,132,126,126,126,126,124,128,128,127,131,134,135,136,138,139,141,142,141,142,141,140,140,140,139,139,137,134,134,137,137,137,138,137,139,140,141,140,140,138,141,138,136,134,132,131,133,134,132,133,129,127,130,131,132,131,129,127,126,126,128,132,132,133,134,133,134,131,131,130,129,130,128,130,133,135,134,135,136,137,138,139,137,134,136,134,134,130,128,128,128,129,129,127,126,126,127,129,127,129,131,126,130,130,130,129,128,125,123,125,126,126,127,129,131,130,133,132,133,134,135,135,135,135,130,124,122,122,121,120,118,117,116,115,117,120,120,118,122,124,125,126,129,132,132,131,131,129,126,128,126,125,127,129,131,133,133,135,135,135,136,136,137,139,139,140,141,143,144,144,143,143,142,142,141,141,139,136,134,133,133,131,125,129,132,133,133,131,126,130,131,132,131,129,131,129,125,122,121,122,121,124,129,130,133,135,136,138,139,140,137,137,135,134,130,127,126,126,124,124,123,125,130,135,135,129,129,128,130,128,129,130,133,136,136,138,139,140,142,143,147,146,146,147,146,149,149,148,147,144,142,139,140,139,139,142,142,143,143,144,143,143,142,141,140,137,136,134,137,138,139,141,141,143,145,145,147,147,148,148,148,149,150,151,151,151,152,152,152,152,153,155,154,154,154,154,155,156,155,156,156,156,157,155,156,156,155,155,155,157,156,155,155,155,155,156,156,156,156,155,156,156,154,154,153,153,154,153,154,154,154,154,152,148,147,147,147,147,146,144,143,143,143,141,143,141,140,140,138,139,140,139,138,138,138,138,138,138,138,138,139,140,141,140,139,138,138,137,134,135,134,136,138,139,140,141,141,141,141,141,140,138,139,139,140,141,141,142,143,144,144,143,142,140,139,137,133,132,132,136,136,137,136,134,133,133,132,131,131,131,131,133,136,137,137,136,140,140,140,140,140,140,140,142,141,142,141,141,142,141,143,144,145,145,146,147,146,146,146,145,146,147,147,149,149,149,150,150,149,150,149,149,150,150,149,149,148,148,148,147,147,147,146,146,144,145,145,145,146,146,146,146,146,146,146,146,144,143,142,140,138,136,134,136,138,139,141,141,142,142,142,141,143,142,143,144,142,144,143,144,144,141,140,138,137,137,136,138,139,138,138,139,138,139,139,137,136,133,130,128,126,128,128,130,129,130,130,132,135,136,138,139,139,141,142,143,144,144,146,147,148,147,146,146,143,137,138,139,141,141,143,143,142,143,142,142,142,139,136,137,138,138,141,141,140,140,138,134,129,130,129,130,133,133,136,135,136,136,137,137,138,137,136,136,134,130,131,128,129,127,129,136,135,136,137,137,139,138,140,140,140,140,140,142,142,143,143,144,146,147,146,145,142,141,141,140,139,139,140,142,142,141,141,141,142,144,144,145,145,147,146,145,145,142,139,141,142,142,143,142,142,141,140,139,136,133,134,136,139,140,141,141,142,142,141,141,140,139,135,131,128,127,129,136,137,137,137,137,136,135,133,129,127,130,133,137,138,140,141,141,141,141,140,133,131,130,131,130,128,126,126,127,128,130,131,131,133,135,136,137,136,136,136,137,137,136,134,134,136,137,138,138,139,139,139,139,139,140,139,139,139,135,134,131,130,130,128,132,131,132,132,132,130,132,132,134,141,142,142,142,142,142,143,142,143,141,142,142,142,144,145,146,147,147,146,145,143,141,139,137,136,137,137,137,136,136,140,139,140,140,141,145,144,143,144,143,144,144,143,144,143,144,143,142,142,140,137,135,135,134,133,132,132,131,129,125,126,128,130,132,137,137,138,139,139,141,141,139,138,138,136,135,132,130,129,130,132,130,131,130,127,128,129,132,135,137,137,137,137,137,138,143,144,144,144,144,145,144,142,141,141,140,139,140,138,138,138,134,135,136,137,139,139,140,139,139,138,132,126,126,130,133,133,132,132,131,130,131,130,129,131,132,132,134,134,133,133,132,134,134,134,134,133,132,131,131,131,131,131,133,134,135,136,136,135,136,133,133,133,132,132,133,132,132,131,129,127,128,132,132,132,132,132,134,135,136,136,136,136,136,135,132,135,134,136,138,140,142,142,143,144,144,144,144,143,138,135,134,133,132,130,130,132,131,134,130,132,133,132,133,133,134,136,135,136,135,135,135,134,134,135,135,135,135,131,130,126,130,131,133,135,136,136,136,136,138,140,142,143,144,145,145,146,146,147,147,148,148,148,148,148,148,148,148,148,147,147,146,145,145,144,143,143,143,143,143,142,141,139,138,137,134,131,133,132,131,134,134,133,133,133,132,133,130,131,130,129,131,129,130,130,130,130,130,132,135,134,135,136,136,137,137,137,137,137,137,136,135,134,132,131,133,137,137,138,138,140,141,141,141,139,135,131,134,133,136,137,139,139,139,139,138,139,138,140,140,141,142,143,144,143,143,142,141,140,137,134,132,131,135,137,137,138,138,139,139,139,139,139,140,141,140,140,137,133,126,128,129,130,131,127,122,124,125,122,120,119,121,122,123,124,124,125,127,129,130,130,130,132,132,131,131,130,128,127,125,128,124,121,122,122,121,120,122,122,122,123,122,123,121,119,118,118,117,119,125,131,133,133,137,135,134,134,129,125,121,123,127,127,127,127,126,124,123,122,121,123,128,134,138,142,143,145,145,148,149,149,151,150,151,152,151,151,151,149,148,146,144,142,141,139,139,139,139,141,142,143,144,144,144,144,145,144,145,145,146,146,145,143,142,141,141,138,136,135,135,136,139,142,141,141,137,137,140,142,141,140,140,140,140,141,140,141,141,137,141,144,144,145,146,146,145,147,145,147,147,147,147,147,147,147,146,144,141,139,139,139,139,138,136,135,135,134,137,138,138,138,138,138,140,140,143,143,143,145,147,147,148,150,150,150,150,148,147,146,144,143,143,143,143,142,142,142,142,143,144,144,144,144,142,142,141,143,144,144,145,147,147,148,149,150,150,148,145,142,142,139,136,134,134,133,133,132,132,133,135,136,136,137,138,138,138,141,146,146,146,147,150,150,150,151,154,153,153,153,153,154,154,153,152,152,152,152,153,152,152,153,156,155,155,159,158,158,158,158,159,160,160,161,160,160,162,161,159,159,161,158,157,157,156,152,151,151,151,151,150,150,151,151,151,151,152,152,153,153,153,153,153,153,153,153,151,151,142,140,138,138,130,129,130,130,131,131,131,133,130,131,131,130,134,133,133,131,130,129,129,129,129,129,129,130,130,129,130,129,129,129,129,124,127,127,126,127,124,126,126,128,130,131,131,130,128,128,128,129,131,133,135,135,134,134,136,136,137,137,137,138,139,139,136,136,134,130,127,127,127,127,127,131,134,134,137,138,138,138,138,137,135,134,133,130,128,128,129,130,130,130,129,132,137,136,138,137,135,135,131,133,133,133,134,135,136,138,139,141,141,141,141,140,141,141,139,137,136,133,131,131,132,132,133,131,130,130,126,124,125,127,129,130,127,125,127,127,129,130,127,126,124,124,123,121,124,123,125,130,132,131,131,130,127,125,121,121,117,119,124,131,131,133,136,135,138,136,135,133,131,125,127,129,132,132,134,136,131,128,128,128,128,130,130,131,133,134,134,135,136,134,133,133,129,131,135,132,133,134,133,134,135,134,136,136,136,137,135,136,135,134,134};
	/** 测试用宫缩数据 **/
	protected static int[] uterusArray = {};
	/** 图片路径 **/
	private static String imagePath = "";
	
	/**
	 * 获取中文字体
	 * @param fontSize 字体大小
	 * @param fontStyle 字体样式(正常、加粗)
	 * @return Font
	 */
	private static Font getChineseFont(Integer fontSize, Integer fontStyle){
		try {
			BaseFont chinese = BaseFont.createFont(Consts.PDF_FONT_PATH+"font/simsun.ttc,1", BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED);
			Font fontChinese = new Font(chinese, fontSize, fontStyle);
			return fontChinese;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 此处可将用户信息传入，作为动态生成用户信息Table，本范例暂写死
	 * @return PdfPTable
	 * @throws DocumentException 
	 */
	@SuppressWarnings("static-access")
	private static PdfPTable renderUserInfoTable(VoRemoteData vo) throws DocumentException{
		PdfPTable userTable = new PdfPTable(4);
		userTable.setWidthPercentage(96);
		float[] resultWidth = {30f, 30f, 20f, 20f};
		userTable.setWidths(resultWidth);
		userTable.setHorizontalAlignment(userTable.ALIGN_CENTER);
		userTable.setSpacingBefore(8f);
		PdfPCell cell;
		
		Paragraph name = new Paragraph("姓  名: "+vo.getUserName(), getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(name);
		cell.setBorder(0);
		userTable.addCell(cell);
		
		Paragraph age = new Paragraph("年  龄: "+vo.getUserAge(), getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(age);
		cell.setBorder(0);
		userTable.addCell(cell);
		
		Paragraph weeks = new Paragraph("孕  周: "+vo.getPreganyWeek(), getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(weeks);
		cell.setBorder(0);
		userTable.addCell(cell);
		
		Paragraph phone = new Paragraph("手机号码: "+vo.getMobile(), getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(phone);
		cell.setBorder(0);
		userTable.addCell(cell);
		
		Paragraph startTime = new Paragraph("监护开始时间: "+vo.getHeart().getTime(), getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(startTime);
		cell.setBorder(0);
		userTable.addCell(cell);
		
		Paragraph endTime = new Paragraph("监护结束时间: "+vo.getHeart().getEndTime(), getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(endTime);
		cell.setBorder(0);
		userTable.addCell(cell);
		
		Paragraph timeLength = new Paragraph("监护时长: "+vo.getHeart().getMinute(), getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(timeLength);
		cell.setBorder(0);
		cell.setColspan(2);
		userTable.addCell(cell);
		
		return userTable;
	}
	
	/**
	 * krebs评分表与评分
	 * @return
	 * @throws DocumentException 
	 */
	private static PdfPTable krebsTable(Integer source, String items, String remark, String doctorName, String time) throws DocumentException{
		PdfPTable krebs = new PdfPTable(2);
		krebs.setWidthPercentage(96);
		float[] widths = {55f, 45f};
		krebs.setWidths(widths);
		PdfPCell cell;
		
		cell = new PdfPCell(krebsSourceSheet());
		cell.setBorder(0);
		krebs.addCell(cell);
		
		cell = new PdfPCell(krebsJudgeSource(source, items, remark, doctorName, time));
		cell.setBorder(0);
		cell.setPaddingLeft(20f);
		krebs.addCell(cell);
		
		return krebs;
	}
	
	private static PdfPTable krebsSourceSheet() throws DocumentException{
		PdfPTable sheetTable = new PdfPTable(7);
		float[] width = {7f, 20f, 13f, 12f, 19f, 19f, 10f};
		sheetTable.setWidths(width);
		sheetTable.setSpacingBefore(6);
		sheetTable.setWidthPercentage(100);
		PdfPCell cell;
		
		Paragraph title = new Paragraph("Kreb‘S评分表", getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(title);
		cell.setColspan(7);
		cell.setBorder(0);
		sheetTable.addCell(cell);
		
		sheetTable.addCell(krebsBorderCell("评分"));
		sheetTable.addCell(krebsBorderCell("胎心率基线"));
		sheetTable.addCell(krebsBorderCell("变异振幅"));
		sheetTable.addCell(krebsBorderCell("变异频率"));
		sheetTable.addCell(krebsBorderCell("加速(次/30分钟)"));
		sheetTable.addCell(krebsBorderCell("减速(次/30分钟)"));
		sheetTable.addCell(krebsBorderCell("胎动次数"));
		
		sheetTable.addCell(krebsBorderCell("0分"));
		sheetTable.addCell(krebsBorderCell("<100或 >180"));
		sheetTable.addCell(krebsBorderCell("<5"));
		sheetTable.addCell(krebsBorderCell("<3"));
		sheetTable.addCell(krebsBorderCell("0"));
		sheetTable.addCell(krebsBorderCell(">=2"));
		sheetTable.addCell(krebsBorderCell("0"));
		
		sheetTable.addCell(krebsBorderCell("1分"));
		sheetTable.addCell(krebsBorderCell("100-119,161-180"));
		sheetTable.addCell(krebsBorderCell("5-9,>25"));
		sheetTable.addCell(krebsBorderCell("3-6"));
		sheetTable.addCell(krebsBorderCell("1-4"));
		sheetTable.addCell(krebsBorderCell("1"));
		sheetTable.addCell(krebsBorderCell("1-4"));
		
		sheetTable.addCell(krebsBorderCell("2分"));
		sheetTable.addCell(krebsBorderCell("120-160"));
		sheetTable.addCell(krebsBorderCell("10-25"));
		sheetTable.addCell(krebsBorderCell(">6"));
		sheetTable.addCell(krebsBorderCell(">=5"));
		sheetTable.addCell(krebsBorderCell("无或早减"));
		sheetTable.addCell(krebsBorderCell(">=5"));
		
		return sheetTable;
	}
	
	@SuppressWarnings("static-access")
	private static PdfPCell krebsBorderCell(String desc){
		Paragraph paragraph = new Paragraph(desc, getChineseFont(9, Font.NORMAL));
		PdfPCell cell = new PdfPCell(paragraph);
		cell.setUseAscender(true);
		cell.setHorizontalAlignment(cell.ALIGN_CENTER);
		cell.setVerticalAlignment(cell.ALIGN_MIDDLE);
		cell.setMinimumHeight(32f);
		return cell;
	}
	
	private static PdfPTable krebsJudgeSource(Integer source, String items, String remark, String doctorName, String time) throws DocumentException{
		PdfPTable judgeTable = new PdfPTable(11);
		float[] width = {7f, 6f, 22f, 6f, 10f, 6f, 10f, 6f, 10f, 8f, 15f};
		judgeTable.setWidths(width);
		judgeTable.setSpacingBefore(6);
		judgeTable.setWidthPercentage(100);
		PdfPCell cell;
		
		String sourceResult = source == null ? "" : source+"";
		Paragraph title = new Paragraph("结果：Kreb‘S评分   "+ sourceResult +"   分", getChineseFont(10, Font.NORMAL));
		cell = new PdfPCell(title);
		cell.setColspan(11);
		cell.setBorder(0);
		cell.setMinimumHeight(30f);
		cell.setPaddingTop(15f);
		judgeTable.addCell(cell);
		
		judgeTable.addCell(krebsJudgeCell("NST", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "有反应"), 1));
		judgeTable.addCell(krebsJudgeCell("有反应", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "无反应"), 1));
		judgeTable.addCell(krebsJudgeCell("无反应", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "正弦曲线"), 1));
		judgeTable.addCell(krebsJudgeCell("正弦曲线", 3, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "不满意1"), 1));
		judgeTable.addCell(krebsJudgeCell("不满意", 1, 20f));
		
		judgeTable.addCell(krebsJudgeCell("OCT", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "OST或NS-CST"), 1));
		judgeTable.addCell(krebsJudgeCell("OST或NS-CST", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "阳性"), 1));
		judgeTable.addCell(krebsJudgeCell("阳性", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "阴性"), 1));
		judgeTable.addCell(krebsJudgeCell("阴性", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "可疑"), 1));
		judgeTable.addCell(krebsJudgeCell("可疑", 1, 20f));
		judgeTable.addCell(krebsJudgeCheckCell(checkItemsSelected(items, "不满意2"), 1));
		judgeTable.addCell(krebsJudgeCell("不满意", 1, 20f));
		
		judgeTable.addCell(krebsJudgeCell("备注："+remark, 11, 30f));
		
		judgeTable.addCell(krebsJudgeCell("监护医生："+doctorName, 6, 20f));
		judgeTable.addCell(krebsJudgeCell("日期："+time, 5, 20f));
		
		judgeTable.addCell(krebsJudgeCell("医生签名：", 11, 20f));
		
		return judgeTable;
	}
	
	private static boolean checkItemsSelected(String items, String item){
		if(StringUtils.isEmpty(items) || StringUtils.isEmpty(item)){
			return false;
		}
		List<String> itemList = Arrays.asList(items.split(","));
		if(itemList.contains(item)){
			return true;
		}
		return false;
	}
	
	@SuppressWarnings("static-access")
	private static PdfPCell krebsJudgeCell(String desc, Integer colspan, float height){
		Paragraph paragraph = new Paragraph(desc, getChineseFont(9, Font.NORMAL));
		paragraph.setAlignment(paragraph.ALIGN_LEFT);
		PdfPCell cell = new PdfPCell();
		cell.addElement(paragraph);
		cell.setUseAscender(true);
		cell.setBorder(0);
		cell.setHorizontalAlignment(cell.ALIGN_LEFT);
		if(desc.equals("备注：")){
			cell.setVerticalAlignment(cell.ALIGN_TOP);
		}else{
			cell.setVerticalAlignment(cell.ALIGN_MIDDLE);
		}
		cell.setMinimumHeight(height);
		cell.setColspan(colspan);
		return cell;
	}
	
	@SuppressWarnings("static-access")
	private static PdfPCell krebsJudgeCheckCell(boolean check, Integer colspan){
		PdfPCell cell = new PdfPCell();
		Image image = null;
		try {
			image = check ? Image.getInstance(imagePath+"checked.png") : Image.getInstance(imagePath+"unchecked.png");
			image.scaleAbsolute(8f, 8f);
			image.setAlignment(Image.RIGHT);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if(image != null){
			cell.addElement(image);
		}
		cell.setUseAscender(true);
		cell.setBorder(0);
		cell.setHorizontalAlignment(cell.ALIGN_RIGHT);
		cell.setVerticalAlignment(cell.ALIGN_MIDDLE);
		cell.setMinimumHeight(20f);
		cell.setColspan(colspan);
		return cell;
	}
	
	/**
	 * 生成PDF文件方法
	 * PDF文件中医院及kerbs信息都可不动，因PDF有两页，所以要调用画图接口SFYPdfDrawInterface两次
	 * 第一次调用margin_top值传入210高度，第二次margin_top传入30的高度
	 * page参数说明，page 参数用于标明胎心及宫缩为PDF第几页内容，主要用于显示不同数据内容
	 * 此处未作生成的报告上传到文件服务器，未讲临时报告文件删除
	 * @param start 胎心数据偏移量起始位置(偏移量代表偏移了多少数据点) - 报告生成，胎心数据及起始点的校验请自己完成
	 * @param end 胎心数据偏移量结束位置
	 * @param paperSpeed 走纸速度(1厘米/分，2厘米/分，3厘米/分，20分钟一页，30分钟一页) 这里取的类型是前面的1,2,3,20,30
	 * @param testTime 测试开始时间
	 * @return
	 */
	public String generate(HttpServletRequest request, Integer offset, VoRemoteData vo, String items, 
			Integer source, Integer speed, String doctorName, String remark, Integer start, Integer end){
		Document document = new Document(PageSize.A4.rotate());      
		PdfWriter writer = null;
		imagePath = request.getSession().getServletContext().getRealPath("/")+"media"+File.separator+"image"+File.separator;
		String filePath = request.getSession().getServletContext().getRealPath("/")+"temp"+File.separator+TimeUtils.randomOrderId()+".pdf";
		//String filePath = "F://speedT20.pdf";
		
		try {
			writer = PdfWriter.getInstance(document, new FileOutputStream(filePath));
			/** 设置边距，顺序：左、右、上、下 **/
			document.setMargins(10, 10, 0, 0);
			document.open();
			
			/** 医院名标题 **/
			String hospitalName = vo.getHospitalInfo().getName();
			if(StringUtils.isNotEmpty(vo.getRemoteType()) && vo.getRemoteType().equals(RemoteType.院内监护.name())){
				hospitalName = "院内胎心监护报告单";
			}
			Paragraph hospitalNameTitle = new Paragraph(hospitalName, getChineseFont(15, Font.BOLD));
			hospitalNameTitle.setAlignment(1);/** 设置居中显示 **/
			document.add(hospitalNameTitle);
			
			/** 文档类型副标题 **/
			Paragraph subTitle = new Paragraph("电 脑 胎 儿 监 护 图", getChineseFont(12, Font.BOLD));
			subTitle.setAlignment(1);
			subTitle.setLeading(0);
			subTitle.setSpacingBefore(16f);
			document.add(subTitle);
			
			/** 用户信息的Table **/
			PdfPTable userInfoTable = renderUserInfoTable(vo);
			document.add(userInfoTable);
			
			/** Kreb‘S评分表与评分 **/
			PdfPTable krebsTable = krebsTable(source, items, remark, doctorName, vo.getHeart().getTime());
			document.add(krebsTable);
			
			/**
			 * 此处开始计算页数及画图数据
			 */
			Integer totalPoint = 0;
			switch (speed) {
				case 1: totalPoint = 3240; break;
				case 2: totalPoint = 1620; break;
				case 3: totalPoint = 1080; break;
				case 20: totalPoint = 2400; break;
				case 30: totalPoint = 3600; break;
				default: break;
			}
			
			int[] drawData = convertData(vo.getHeart().getData(), offset);
			int[] uterusData = convertData(vo.getHeart().getUterusData(), offset);
			int[] fetalMoveArray = convertData(vo.getHeart().getFetalMoveData(), 0);
			int totalPage = (end - start) % totalPoint == 0 ? (end - start) / totalPoint : (end - start) / totalPoint + 1;
			
			/** 走纸速度和时间 **/
			String paper_speed = "";
			switch (speed) {
				case 1:
				case 2:
				case 3:
					paper_speed = speed+"厘米/分钟";
					break;
				case 20:
				case 30:
					paper_speed = speed+"分钟/页";
					break;
			}
			Paragraph speedLabel = new Paragraph("走纸速度："+paper_speed+"    第 1 页  共 "+totalPage+" 页 ", getChineseFont(10, Font.NORMAL));
			speedLabel.setIndentationLeft(12f);
			document.add(speedLabel);
			
			if(totalPage > 0){
				for(int i = 1; i <= totalPage; i++){
					int marginTop = i == 1 ? 250 : 30;
					int[] fetal = null;
					int[] uterus = null;
					if(drawData != null && drawData.length > 0){
						fetal = Arrays.copyOfRange(drawData, start + totalPoint * (i - 1), end < start + totalPoint * i ? end : start + totalPoint * i);
					}
					if(uterusData != null && uterusData.length > 0){
						uterus = Arrays.copyOfRange(uterusData, start + totalPoint * (i - 1), end < start + totalPoint * i ? end : start + totalPoint * i);
					}
					
					if(i != 1){
						document.newPage();
					}
					SFYPdfDrawInterface draw = new SFYPdfDrawInterface(marginTop, i, fetal, uterus, speed, start, end,
							TimeUtils.getTimestampDate(vo.getHeart().getTime(), Consts.FORMAT_TIME_ONE), fetalMoveArray);
					VerticalPositionMark vm = new VerticalPositionMark(draw, 0);
					document.add(vm);
				}
			}
	        
			PdfContentByte cb = writer.getDirectContent();
			cb.saveState();
	        cb.beginText();
	        cb.setFontAndSize(BaseFont.createFont(Consts.PDF_FONT_PATH+"font/simsun.ttc,1", BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED), 8);
	        cb.showTextAligned(PdfContentByte.ALIGN_LEFT, "说明：1. 本报告仅对监测样本负责，仅供临床参考，不做诊断证明之用    2. 请依据医生建议按时复诊检查自感异常随时复诊", 10, 13, 0);
	        cb.endText();
	        cb.restoreState();
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			if(document != null){
				document.close();
			}
			if(writer != null){
				writer.close();
			}
		}
		return filePath;
	}
	
	public static int[] convertData(String dataStr, Integer offset){
		String[] heartData = null;
		if(StringUtils.isEmpty(dataStr)){
			return null;
		}
		if(dataStr.indexOf("[") != -1){
			dataStr = dataStr.replace("[", "");
		}
		if(dataStr.indexOf("]") != -1){
			dataStr = dataStr.replace("]", "");
		}
		if(dataStr.indexOf("\r\n") != -1){
			dataStr = dataStr.replace("\r\n", "");
		}
		if(StringUtils.isEmpty(dataStr)){
			return null;
		}
		heartData = dataStr.split(",");
		int[] intArray = null;
		if(heartData != null && heartData.length > 0){
			intArray = new int[heartData.length];
			for(int i = 0; i < heartData.length; i++){
				intArray[i]=Integer.parseInt(heartData[i]);
			}
			/*if(offset != null && offset < intArray.length){
				if(intArray.length >= 2401+offset){
					intArray = Arrays.copyOfRange(intArray, offset, 2401+offset);
				}else{
					intArray = Arrays.copyOfRange(intArray, offset, intArray.length);
				}
			}else{
				intArray = null;
			}*/
		}
		return intArray;
	}
	
	public static void main(String[] args) {
		/*GenerateSFYMonitorPDF pdf = new GenerateSFYMonitorPDF();
		pdf.generate(0, 3727, 20, TimeUtils.getCurrentTime());*/
		try {
			int offset = 100;
			String str = "0,0,193,190,188,183,183,183,183,183,183,183,186,190,187,0,0,0,0,0,0,0,149,149,149,149,149,149,149,149,154,156,153,152,151,153,153,154,158,155,0,103,103,103,96,97,97,104,104,104,104,104,114,114,114,120,118,118,120,120,121,122,120,0,0,0,122,122,122,124,0,0,120,119,119,118,118,116,116,116,113,113,120,0,166,160,160,160,153,161,162,162,162,162,162,162,0,124,124,117,111,106,115,115,116,111,116,113,118,118,118,118,108,96,95,95,96,96,99,99,89,94,94,94,103,112,112,108,108,116,107,98";
			int[] drawData = convertData(str, offset);
			
			int[] fetal = null;
			fetal = Arrays.copyOfRange(drawData, 20, 1000);
			System.out.println(fetal.length);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
